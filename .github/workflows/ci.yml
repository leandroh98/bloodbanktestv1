name: Tarea Automatizada de ejecución de pruebas

env:
  DOTNET_VERSION: '8.x'                     # la versión de .NET
  SONAR_ORG: 'leandroh98'                    # Nombre de la organización de sonar cloud
  SONAR_PROJECT: 'leandroh98_bancaapp'        # Key ID del proyecto de sonar
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  coverage:
    name: CoverageReport
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configurando la versión de NET
        uses: actions/setup-dotnet@v4
        with:
          java-version: ${{ env.DOTNET_VERSION }}
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Configurando la versión de NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Restaurar los paquetes
        run: dotnet restore 
      - name: Ejecutar pruebas
        run: dotnet test --collect:"XPlat Code Coverage"
      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.3.7
        with:
          reports: ./*/*/*/coverage.cobertura.xml
          targetdir: coveragereport
          reporttypes: MarkdownSummary;MarkdownAssembliesSummary;MarkdownSummaryGithub
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport 
          path: coveragereport 
      - name: Publish coverage in build summary # 
        run: cat coveragereport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY 
        shell: bash
      - name: Instalar Scanner
        run: dotnet tool install -g dotnet-sonarscanner
      - name: Ejecutar escaneo
        run: | 
          dotnet-sonarscanner begin /k:"${{ env.SONAR_PROJECT }}" /o:"${{ env.SONAR_ORG }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      - name: Install Living Doc
        run: dotnet tool install -g SpecFlow.Plus.LivingDoc.CLI
      - name: Generate living doc
        run: livingdoc test-assembly ./Bank.Domain.Tests/bin/Debug/net8.0/Bank.Domain.Tests.dll -t ./Bank.Domain.Tests/bin/Debug/net8.0/TestExecution.json -o ./report/index.html
      - uses: actions/upload-artifact@v3
        with:
          name: specflow
          path: report
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: bddreporte
          publish_dir: ./report/
